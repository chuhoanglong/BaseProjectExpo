{
  "openapi": "3.0.0",
  "paths": {
    "/v0": {
      "get": {
        "operationId": "AppController_getDefaultVersionHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "operationId": "AppController_getHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        }
      }
    },
    "/v0/debug-sentry": {
      "get": {
        "operationId": "AppController_getError",
        "parameters": [],
        "responses": { "200": { "description": "" } }
      }
    },
    "/v0/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["users"]
      }
    },
    "/v0/users/me": {
      "get": {
        "operationId": "UsersController_get",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProfileEntity" }
              }
            }
          }
        },
        "tags": ["users"]
      },
      "patch": {
        "operationId": "UsersController_updateMe",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserDto" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserUpdateEntity" }
              }
            }
          }
        },
        "tags": ["users"]
      },
      "delete": {
        "operationId": "UsersController_deleteMe",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["users"]
      }
    },
    "/v0/users/match-rate": {
      "get": {
        "operationId": "UsersController_getMatchRate",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetMatchRateEntity" }
              }
            }
          }
        },
        "tags": ["users"]
      }
    },
    "/v0/users/invitation/link": {
      "get": {
        "operationId": "UsersController_getInvitationLink",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInvitationLinkEntity"
                }
              }
            }
          }
        },
        "tags": ["users"]
      }
    },
    "/v0/users/invitation/send": {
      "post": {
        "operationId": "UsersController_sendInvitation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendInvitationRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendInvitationEntity"
                }
              }
            }
          }
        },
        "tags": ["users"]
      }
    },
    "/v0/users/invitation/add-inviter": {
      "post": {
        "operationId": "UsersController_addInviter",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddInviterRequestDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendInvitationEntity"
                }
              }
            }
          }
        },
        "tags": ["users"]
      }
    },
    "/v0/users/avatar": {
      "patch": {
        "operationId": "UsersController_updateAvatar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateAvatarDto" }
            }
          }
        },
        "responses": { "200": { "description": "" } },
        "tags": ["users"]
      }
    },
    "/v0/users/metadata": {
      "get": {
        "operationId": "UsersController_getUserMetadata",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserMetadataEntity" }
              }
            }
          }
        },
        "tags": ["users"]
      }
    },
    "/v0/users/user-connections": {
      "get": {
        "operationId": "UsersController_getUserConnections",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserConnectionEntityResponse"
                }
              }
            }
          }
        },
        "tags": ["users"]
      }
    },
    "/v0/users/{id}": {
      "get": {
        "operationId": "UsersController_detail",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "user id",
            "example": "asdasdsghtrhgfjkl",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProfileEntity" }
              }
            }
          }
        },
        "tags": ["users"]
      }
    },
    "/v0/users/term": {
      "post": {
        "operationId": "UsersController_acceptTerm",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["users"]
      }
    },
    "/v0/voices": {
      "post": {
        "operationId": "VoicesController_upsertVoicePath",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateVoiceDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["voices"]
      }
    },
    "/v0/presigned-url": {
      "post": {
        "operationId": "StorageController_genUploadPresignedUrl",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GenUploadDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GentUploadEntity" }
              }
            }
          }
        },
        "tags": ["storage"]
      }
    },
    "/v0/data/data-volumes": {
      "post": {
        "operationId": "DataVolumesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateDataVolumeDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DataVolumesEntity" }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "DataVolumesController_getAllDataVolumes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDataVolumeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v0/data/data-volumes/upsert-match-rate": {
      "post": {
        "operationId": "DataVolumesController_upsertMatchRate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpsertMatchRateDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } }
      }
    },
    "/v0/data/data-volumes/update-status": {
      "post": {
        "operationId": "DataVolumesController_updateStatus",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateDataStatusDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateDataStatusDto" }
              }
            }
          }
        }
      }
    },
    "/v0/data/data-volumes/connect": {
      "post": {
        "operationId": "DataVolumesController_connectAppData",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConnectAppData" }
            }
          }
        },
        "responses": { "201": { "description": "" } }
      }
    },
    "/v0/data/data-volumes/disconnect": {
      "post": {
        "operationId": "DataVolumesController_disconnectAppData",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DisconnectAppData" }
            }
          }
        },
        "responses": { "201": { "description": "" } }
      }
    },
    "/v0/data/data-volumes/{app}": {
      "delete": {
        "operationId": "DataVolumesController_deleteAppData",
        "parameters": [
          {
            "name": "app",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } }
      }
    },
    "/v0/data/data-volumes/statistic-data": {
      "get": {
        "operationId": "DataVolumesController_getStatisticData",
        "parameters": [
          {
            "name": "timePeriod",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "productCode",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticDataResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "PDS",
    "description": "The PDS API",
    "version": "0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    { "url": "http://localhost:3001", "description": "dev" },
    { "url": "http://localhost:3001", "description": "local" }
  ],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "user firebase's id",
            "example": "bkjasndalksdmiewjfiowejdoa"
          },
          "email": {
            "type": "string",
            "description": "user's email",
            "example": "test@user.com"
          },
          "displayName": {
            "type": "string",
            "description": "user's display name",
            "example": "huydeptrai"
          },
          "photoURL": { "type": "string", "description": "user's avatar" }
        },
        "required": ["id", "email", "displayName", "photoURL"]
      },
      "ProfileEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "user's id",
            "example": "asdasdasdasd"
          },
          "email": {
            "type": "string",
            "description": "user's email",
            "example": "test@gmail.com"
          },
          "displayName": { "type": "string" },
          "photoURL": { "type": "string" },
          "avatar": { "type": "string" },
          "originalAvatar": { "type": "string" },
          "isAcceptTerm": { "type": "boolean" }
        },
        "required": [
          "id",
          "email",
          "displayName",
          "photoURL",
          "avatar",
          "originalAvatar",
          "isAcceptTerm"
        ]
      },
      "MatchEntity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Match value",
            "example": 0.24
          },
          "change": {
            "type": "number",
            "description": "Change in match value",
            "example": -0.03
          }
        },
        "required": ["value", "change"]
      },
      "MediaEntity": {
        "type": "object",
        "properties": {
          "audio": {
            "type": "number",
            "description": "Audio percentage",
            "example": 50
          },
          "video": {
            "type": "number",
            "description": "Video percentage",
            "example": 30
          },
          "text": {
            "type": "number",
            "description": "Text percentage",
            "example": 15
          },
          "image": {
            "type": "number",
            "description": "Image percentage",
            "example": 5
          }
        },
        "required": ["audio", "video", "text", "image"]
      },
      "PersonalEntity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Personal value",
            "example": 25.36
          },
          "change": {
            "type": "number",
            "description": "Change in personal value",
            "example": 2.15
          },
          "match": {
            "description": "Match details",
            "allOf": [{ "$ref": "#/components/schemas/MatchEntity" }]
          },
          "media": {
            "description": "Media distribution",
            "allOf": [{ "$ref": "#/components/schemas/MediaEntity" }]
          }
        },
        "required": ["value", "change", "match", "media"]
      },
      "AverageEntity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Average value",
            "example": 10.56
          },
          "change": {
            "type": "number",
            "description": "Change in average value",
            "example": 0.31
          },
          "match": {
            "description": "Match details",
            "allOf": [{ "$ref": "#/components/schemas/MatchEntity" }]
          }
        },
        "required": ["value", "change", "match"]
      },
      "GetMatchRateEntity": {
        "type": "object",
        "properties": {
          "personal": {
            "description": "Personal details",
            "allOf": [{ "$ref": "#/components/schemas/PersonalEntity" }]
          },
          "average": {
            "description": "Average details",
            "allOf": [{ "$ref": "#/components/schemas/AverageEntity" }]
          }
        },
        "required": ["personal", "average"]
      },
      "GetInvitationLinkEntity": {
        "type": "object",
        "properties": {
          "invitationUrl": {
            "type": "string",
            "description": "invitation link",
            "example": "https://example.com?referrer_id=xxx"
          }
        },
        "required": ["invitationUrl"]
      },
      "SendInvitationRequestDto": {
        "type": "object",
        "properties": {
          "recipientEmail": {
            "type": "string",
            "description": "recipient's email",
            "example": "test@user.com"
          }
        },
        "required": ["recipientEmail"]
      },
      "SendInvitationEntity": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "whether sent successfully"
          }
        },
        "required": ["isSuccess"]
      },
      "AddInviterRequestDto": {
        "type": "object",
        "properties": {
          "inviterId": {
            "type": "string",
            "description": "inviter id",
            "example": "xxxxxxxx"
          }
        },
        "required": ["inviterId"]
      },
      "UpdateAvatarDto": {
        "type": "object",
        "properties": {
          "photoURL": { "type": "string" },
          "avatar": { "type": "string" },
          "originalAvatar": { "type": "string" },
          "fileSize": { "type": "number" }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": { "displayName": { "type": "string" } },
        "required": ["displayName"]
      },
      "UserUpdateEntity": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "whether sent successfully"
          },
          "reasonKey": { "type": "string" }
        },
        "required": ["isSuccess", "reasonKey"]
      },
      "UserMetadataEntity": {
        "type": "object",
        "properties": {
          "isVoiceUploaded": {
            "type": "boolean",
            "description": "whether uploaded voice"
          },
          "isNeedRename": { "type": "boolean" }
        },
        "required": ["isVoiceUploaded", "isNeedRename"]
      },
      "UserConnectionEntityServing": {
        "type": "object",
        "properties": {
          "productCode": { "type": "string" },
          "isLinked": { "type": "boolean" },
          "isDataLinked": { "type": "boolean" }
        },
        "required": ["productCode", "isLinked", "isDataLinked"]
      },
      "GetUserConnectionEntityResponse": {
        "type": "object",
        "properties": {
          "userConnections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserConnectionEntityServing"
            }
          }
        },
        "required": ["userConnections"]
      },
      "CreateVoiceDto": {
        "type": "object",
        "properties": {
          "filePath": { "type": "string" },
          "fileSize": { "type": "string" }
        },
        "required": ["filePath", "fileSize"]
      },
      "GenUploadDto": {
        "type": "object",
        "properties": {
          "filename": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["audio", "video", "image", "avatar"]
          }
        },
        "required": ["filename", "type"]
      },
      "GentUploadEntity": {
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "key": { "type": "string" },
          "bucket": { "type": "string" }
        },
        "required": ["url", "key", "bucket"]
      },
      "CreateDataVolumeDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "number",
            "description": "Year of the data volume entry",
            "example": 2024
          },
          "month": {
            "type": "number",
            "description": "Month of the data volume entry",
            "example": 9
          },
          "day": {
            "type": "number",
            "description": "Day of the data volume entry",
            "example": 10
          },
          "productCode": {
            "type": "string",
            "description": "Project associated with the data",
            "example": "pds",
            "enum": ["gijiroku", "alt-brain", "clone-dev", "pds-dev"]
          },
          "video": {
            "type": "number",
            "description": "Size of the data",
            "example": 1024.5
          },
          "audio": {
            "type": "number",
            "description": "Size of the data",
            "example": 1024.5
          },
          "image": {
            "type": "number",
            "description": "Size of the data",
            "example": 1024.5
          },
          "text": {
            "type": "number",
            "description": "Size of the data",
            "example": 1024.5
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date",
            "example": "2024-09-09T00:00:00.000Z"
          }
        },
        "required": [
          "year",
          "month",
          "day",
          "productCode",
          "video",
          "audio",
          "image",
          "text",
          "createdAt"
        ]
      },
      "DataVolumesEntity": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User's ID",
            "example": "user123"
          },
          "year": {
            "type": "number",
            "description": "Year of the data volume entry",
            "example": 2024
          },
          "month": {
            "type": "number",
            "description": "Month of the data volume entry",
            "example": 9
          },
          "day": {
            "type": "number",
            "description": "Day of the data volume entry",
            "example": 10
          },
          "productCode": {
            "type": "string",
            "description": "Project associated with the data",
            "example": "pds"
          },
          "video": {
            "type": "number",
            "description": "Size of the data",
            "example": 1024.5
          },
          "audio": {
            "type": "number",
            "description": "Size of the data",
            "example": 1024.5
          },
          "image": {
            "type": "number",
            "description": "Size of the data",
            "example": 1024.5
          },
          "text": {
            "type": "number",
            "description": "Size of the data",
            "example": 1024.5
          }
        },
        "required": [
          "userId",
          "year",
          "month",
          "day",
          "productCode",
          "video",
          "audio",
          "image",
          "text"
        ]
      },
      "UpsertMatchRateDto": {
        "type": "object",
        "properties": {
          "newMatchRate": { "type": "number", "minimum": 0, "maximum": 100 }
        },
        "required": ["newMatchRate"]
      },
      "UpdateDataStatusDto": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "video": { "type": "number" },
          "audio": { "type": "number" },
          "text": { "type": "number" },
          "image": { "type": "number" },
          "productCode": {
            "enum": ["gijiroku", "alt-brain", "clone-dev", "pds-dev"],
            "type": "string"
          },
          "status": {
            "enum": ["registered", "uploaded", "deleted", "failed"],
            "type": "string"
          },
          "dataType": {
            "enum": ["audio", "text", "video", "image"],
            "type": "string"
          },
          "datasetId": { "type": "string" },
          "dataVolume": { "type": "number" },
          "dataOriginCategory": {
            "enum": ["alt", "external"],
            "type": "string"
          },
          "dataOriginServiceId": { "type": "string" },
          "metaData": { "type": "string" },
          "isTrainEnable": { "type": "boolean" },
          "isPersonalizeEnable": { "type": "boolean" },
          "isSaleEnable": { "type": "boolean" }
        },
        "required": [
          "email",
          "video",
          "audio",
          "text",
          "image",
          "productCode",
          "status"
        ]
      },
      "ConnectAppData": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Project associated with the data",
            "example": "pds",
            "enum": ["gijiroku", "alt-brain", "clone-dev"]
          }
        },
        "required": ["productCode"]
      },
      "DisconnectAppData": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Project associated with the data",
            "example": "pds",
            "enum": ["gijiroku", "alt-brain", "clone-dev"]
          },
          "isDeleteAllData": {
            "type": "boolean",
            "description": "Project associated with the data"
          }
        },
        "required": ["productCode", "isDeleteAllData"]
      },
      "VolumesEntity": {
        "type": "object",
        "properties": {
          "video": {
            "type": "number",
            "description": "Total video data in bytes",
            "example": 2049
          },
          "audio": {
            "type": "number",
            "description": "Total audio data in bytes",
            "example": 2049
          },
          "image": {
            "type": "number",
            "description": "Total image data in bytes",
            "example": 2049
          },
          "text": {
            "type": "number",
            "description": "Total text data in bytes",
            "example": 2049
          }
        },
        "required": ["video", "audio", "image", "text"]
      },
      "DayVolumesEntity": {
        "type": "object",
        "properties": {
          "video": {
            "type": "number",
            "description": "Total video data in bytes",
            "example": 2049
          },
          "audio": {
            "type": "number",
            "description": "Total audio data in bytes",
            "example": 2049
          },
          "image": {
            "type": "number",
            "description": "Total image data in bytes",
            "example": 2049
          },
          "text": {
            "type": "number",
            "description": "Total text data in bytes",
            "example": 2049
          },
          "date": {
            "type": "string",
            "description": "Date of the data entry",
            "example": "2024-09-12"
          }
        },
        "required": ["video", "audio", "image", "text", "date"]
      },
      "AppEntity": {
        "type": "object",
        "properties": {
          "change": { "$ref": "#/components/schemas/VolumesEntity" },
          "appChange": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DayVolumesEntity" }
          },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DayVolumesEntity" }
          }
        },
        "required": ["change", "data"]
      },
      "GetDataVolumeResponse": {
        "type": "object",
        "properties": {
          "data": { "$ref": "#/components/schemas/VolumesEntity" },
          "week": {
            "type": "object",
            "properties": {
              "total": {
                "required": true,
                "$ref": "#/components/schemas/AppEntity"
              },
              "pds-dev": {
                "required": true,
                "$ref": "#/components/schemas/AppEntity"
              },
              "gijiroku": {
                "required": true,
                "$ref": "#/components/schemas/AppEntity"
              },
              "alt-brain": {
                "required": true,
                "$ref": "#/components/schemas/AppEntity"
              },
              "clone-dev": {
                "required": true,
                "$ref": "#/components/schemas/AppEntity"
              }
            }
          }
        },
        "required": ["data", "week"]
      },
      "DetailPerDataType": {
        "type": "object",
        "properties": {
          "dataType": {
            "type": "string",
            "enum": ["audio", "text", "video", "image"]
          },
          "amount": { "type": "number" },
          "lastUpdate": { "type": "string" },
          "changeToLastPeriod": { "type": "number" },
          "percent": { "type": "number" }
        },
        "required": ["dataType", "amount", "changeToLastPeriod", "percent"]
      },
      "DataPerProduct": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "enum": ["gijiroku", "alt-brain", "clone-dev", "pds-dev"]
          },
          "dataTypeDetails": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DetailPerDataType" }
          }
        },
        "required": ["productCode", "dataTypeDetails"]
      },
      "GetStatisticDataResponse": {
        "type": "object",
        "properties": {
          "dataTypeDetailAll": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DetailPerDataType" }
          },
          "changeData": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DayVolumesEntity" }
          },
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DayVolumesEntity" }
          },
          "totalDataAmount": { "type": "number" },
          "totalChangeAmount": { "type": "number" },
          "dataPerProducts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DataPerProduct" }
          }
        }
      }
    }
  },
  "security": [{ "bearer": [] }]
}
